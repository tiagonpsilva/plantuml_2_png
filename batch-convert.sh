#!/bin/bash

# batch-convert.sh - Script para converter m√∫ltiplos arquivos PlantUML de uma vez
# Autor: Tiago N. Pinto Silva
# Vers√£o: 1.0.0

# Pasta onde os PNGs ser√£o salvos (padr√£o: ./output)
OUTPUT_DIR="${1:-./output}"
# Pasta com os arquivos de origem (padr√£o: ./examples)
INPUT_DIR="${2:-./examples}"
# Flag de verbosidade
VERBOSE=0

# Fun√ß√£o para exibir mensagem de ajuda
show_help() {
  echo "Uso: $(basename $0) [DIRET√ìRIO_SA√çDA] [DIRET√ìRIO_ENTRADA] [--verbose]"
  echo
  echo "Converte todos os arquivos .wsd do diret√≥rio de entrada para PNG"
  echo
  echo "Par√¢metros:"
  echo "  DIRET√ìRIO_SA√çDA   Diret√≥rio onde os PNGs ser√£o salvos (padr√£o: ./output)"
  echo "  DIRET√ìRIO_ENTRADA Diret√≥rio de onde os arquivos .wsd ser√£o lidos (padr√£o: ./examples)"
  echo "  --verbose         Exibe informa√ß√µes detalhadas durante o processamento"
  echo
  echo "Exemplos:"
  echo "  $(basename $0)                       # Usa ./examples como entrada e ./output como sa√≠da"
  echo "  $(basename $0) ./diagramas           # Usa ./examples como entrada e ./diagramas como sa√≠da"
  echo "  $(basename $0) ./diagramas ./src     # Usa ./src como entrada e ./diagramas como sa√≠da"
  echo "  $(basename $0) ./diagramas ./src --verbose  # Modo verboso"
  echo
  exit 0
}

# Verifica a presen√ßa de --help
for arg in "$@"; do
  if [[ "$arg" == "--help" || "$arg" == "-h" ]]; then
    show_help
  fi
  if [[ "$arg" == "--verbose" || "$arg" == "-v" ]]; then
    VERBOSE=1
  fi
done

# Verifica se o diret√≥rio de entrada existe
if [ ! -d "$INPUT_DIR" ]; then
  echo "‚ùå Erro: O diret√≥rio de entrada '$INPUT_DIR' n√£o existe."
  exit 1
fi

# Cria o diret√≥rio de sa√≠da se n√£o existir
mkdir -p "$OUTPUT_DIR"

# Caminho completo do script plantuml2png.sh
SCRIPT_DIR=$(dirname "$(realpath "$0")")
PLANTUML_SCRIPT="$SCRIPT_DIR/plantuml2png.sh"

# Verifica se o script plantuml2png.sh existe
if [ ! -f "$PLANTUML_SCRIPT" ]; then
  echo "‚ùå Erro: O script plantuml2png.sh n√£o foi encontrado em '$SCRIPT_DIR'."
  exit 1
fi

# Adiciona permiss√£o de execu√ß√£o ao script se necess√°rio
chmod +x "$PLANTUML_SCRIPT"

# Encontra todos os arquivos .wsd no diret√≥rio de entrada
WSD_FILES=$(find "$INPUT_DIR" -name "*.wsd" -type f)

# Verifica se encontrou arquivos
if [ -z "$WSD_FILES" ]; then
  echo "‚ö†Ô∏è Aviso: Nenhum arquivo .wsd encontrado no diret√≥rio '$INPUT_DIR'."
  exit 0
fi

# Contador de arquivos
TOTAL_FILES=$(echo "$WSD_FILES" | wc -l)
CURRENT=0
SUCCESS=0
FAILED=0

echo "üîç Encontrados $TOTAL_FILES arquivos .wsd para convers√£o"
echo "üìÅ Diret√≥rio de sa√≠da: $OUTPUT_DIR"
echo "üöÄ Iniciando processamento..."

# Processa cada arquivo
for wsd_file in $WSD_FILES; do
  CURRENT=$((CURRENT + 1))
  FILENAME=$(basename "$wsd_file")
  
  echo "[$CURRENT/$TOTAL_FILES] Processando $FILENAME..."
  
  # Define as op√ß√µes com base na verbosidade
  OPTS=""
  if [ $VERBOSE -eq 1 ]; then
    OPTS="--verbose"
  fi
  
  # Executa a convers√£o
  "$PLANTUML_SCRIPT" $OPTS --output-dir "$OUTPUT_DIR" "$wsd_file"
  
  # Verifica o resultado
  if [ $? -eq 0 ]; then
    SUCCESS=$((SUCCESS + 1))
    echo "‚úÖ [$CURRENT/$TOTAL_FILES] $FILENAME convertido com sucesso"
  else
    FAILED=$((FAILED + 1))
    echo "‚ùå [$CURRENT/$TOTAL_FILES] Falha ao converter $FILENAME"
  fi
  
  echo "-------------------------------------------"
done

# Mostra resumo
echo "üèÅ Processamento conclu√≠do!"
echo "üìä Resumo:"
echo "   - Total de arquivos: $TOTAL_FILES"
echo "   - Convertidos com sucesso: $SUCCESS"
echo "   - Falhas: $FAILED"

if [ $SUCCESS -gt 0 ]; then
  echo "üìÇ Os arquivos PNG est√£o dispon√≠veis em: $OUTPUT_DIR"
fi

exit 0
